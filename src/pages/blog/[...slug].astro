---
import { getCollection } from 'astro:content'

import Layout from '@/layouts/Layout.astro'
import { dateStringToLocale } from '@/lib/date'
import type { OptimisedGalleryItem } from '@/lib/image'

export async function getStaticPaths() {
	const blogEntries = await getCollection('blog')
	const mdxEntries: any = await Astro.glob('@/content/blog/*.mdx')

	return blogEntries.map((entry) => ({
		params: { slug: entry.slug },
		props: {
			entry,
			mdxEntry: mdxEntries.find((mdx: any) => mdx.file.includes(entry.slug))
		}
	}))
}

const { entry, mdxEntry } = Astro.props
const { Content } = await entry.render()

const lcp = mdxEntry.optimisedGallery?.find(
	(item: OptimisedGalleryItem) => item.isLCP
)?.preview.src
---

<Layout title={entry.data.title}>
	<Fragment slot="head">
		{lcp && <link rel="preload" href={lcp} as="image" />}
	</Fragment>

	<main class="w-full">
		<article
			class:list={[
				'mx-auto w-full px-4 pb-48 text-md',
				entry.data.format === 'image_collection'
					? 'max-w-[1120px]'
					: 'max-w-screen-sm'
			]}
		>
			<h1 class="text-balance">{entry.data.title}</h1>
			<table
				class="clean ml-2 border-l-4 border-l-secondary font-mono text-xs text-muted-foreground sm:ml-6"
			>
				<tbody>
					{
						entry.data.updated && (
							<tr>
								<td class="!pl-4">Updated</td>
								<td class="font-[110]">
									{dateStringToLocale(entry.data.updated)}
								</td>
							</tr>
						)
					}
					<tr>
						<td class="!pl-4">Published</td>
						<td class="font-[110]">
							{dateStringToLocale(entry.data.published)}
						</td>
					</tr>
				</tbody>
			</table>
			<Content />
			<a
				href="/blog"
				class="mx-auto my-16 flex h-9 w-fit items-center justify-center whitespace-nowrap rounded-md border px-4 py-2 font-mono text-sm font-[120] text-primary shadow-sm transition-colors hover:border-primary hover:bg-foreground/10 hover:no-underline focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring"
				>back to other posts</a
			>
		</article>
	</main>
</Layout>
