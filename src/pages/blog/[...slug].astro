---
import { getCollection } from 'astro:content'
import ImageGallery from '@/components/ImageGallery.vue'
import Layout from '@/layouts/Layout.astro'
import { dateStringToLocale } from '@/lib/date'
import { getImage } from 'astro:assets'

export async function getStaticPaths() {
	const blogEntries = await getCollection('blog')
	return blogEntries.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry }
	}))
}

const { entry } = Astro.props
const { Content } = await entry.render()

const optimisedImages = entry.data.images
	? await Promise.all(
			entry.data.images.map(async (image) => {
				const src = import(`../../assets/posts/${image.src}`)
				const optimisedImage = await getImage({
					src: src,
					format: 'webp',
					width: 256,
					height: 256
				})
				optimisedImage.attributes.alt = image.alt
				return optimisedImage
			})
		)
	: []
---

<Layout title={entry.data.title}>
	<main class="w-full">
		<article
			class:list={[
				'mx-auto w-full px-4 pb-48 text-md',
				entry.data.format === 'image_collection'
					? 'max-w-[1120px]'
					: 'max-w-screen-sm'
			]}
		>
			<h1 class="text-balance">{entry.data.title}</h1>
			<table
				class="clean ml-2 border-l-4 border-l-secondary font-mono text-xs text-muted-foreground sm:ml-6"
			>
				<tbody>
					{
						entry.data.updated && (
							<tr>
								<td class="!pl-4">Updated</td>
								<td class="font-[110]">
									{dateStringToLocale(entry.data.updated)}
								</td>
							</tr>
						)
					}
					<tr>
						<td class="!pl-4">Published</td>
						<td class="font-[110]">
							{dateStringToLocale(entry.data.published)}
						</td>
					</tr>
				</tbody>
			</table>
			<Content />
			<ImageGallery images={optimisedImages} client:load />
		</article>
	</main>
</Layout>
